#include <iostream>

/*
 * 原题见: https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4999&page=4
 * 原题为同目录下的 MyDriver2-397.sys
 */

// include 这个是为了 BYTE 和 DWORD
#include <Windows.h>

unsigned __int64 __fastcall Sub_11Df0(const __int64 a1, const __int64 a2)
{
    return (a2 & 0xF0F0F0F0F0F0F0F0ui64) ^ (a1 & 0xF0F0F0F0F0F0F0Fi64);
}

int main()
{
	// sub_113C8()
	const auto dword_16414 = static_cast<int>(Sub_11Df0(3435209541i64, 1412570316i64));
	const auto v1 = static_cast<int>(dword_16414);
	const auto v2 = static_cast<int>(dword_16414) - 1546720155;

    BYTE byte_16310[] =
    {
		0x95, 0x13, 0x6E, 0x5C, 0xA2, 0x13, 0x58, 0x5C, 0xB3, 0x13,
		0x54, 0x5C, 0x88, 0x13, 0x54, 0x5C, 0x9A, 0x13, 0x57, 0x5C,
		0xA9, 0x13, 0x50, 0x5C, 0xA2, 0x13, 0x6E, 0x5C, 0xF7, 0x13,
		0x02, 0x5C, 0xF6, 0x13, 0x1F, 0x5C, 0xB1, 0x13, 0x49, 0x5C,
		0xB1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

	BYTE byte_16390[] =
    {
		0x70, 0x74, 0x37, 0x65, 0x47, 0x66, 0x05, 0x61, 0x11, 0x20,
		0x0C, 0x73, 0x6D, 0x41, 0x3A, 0x73, 0x36, 0x6D, 0x16, 0x6C,
		0x09, 0x5F, 0x28, 0x6E, 0x0B, 0x69, 0x31, 0x65, 0x6D, 0x68,
		0x5C, 0x6F, 0x58, 0x5F, 0x6A, 0x72, 0x02, 0x00, 0x78, 0x00,
		0x74, 0x00, 0x50, 0x00, 0x5F, 0x00, 0x67, 0x00, 0x69, 0x00,
		0x76, 0x00, 0x65, 0x00, 0x4D, 0x00, 0x65, 0x00, 0x5F, 0x00,
		0x66, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x67, 0x00, 0x5F, 0x00,
		0x32, 0x00, 0x33, 0x00, 0x33, 0x00, 0x2E, 0x00, 0x74, 0x00,
		0x78, 0x00, 0x74, 0x00, 0x50, 0x00, 0x5F, 0x00, 0x67, 0x00,
		0x69, 0x00, 0x76, 0x00, 0x65, 0x00, 0x4D, 0x00, 0x65, 0x00,
		0x5F, 0x00, 0x66, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x67, 0x00,
		0x5F, 0x00, 0x32, 0x00, 0x33, 0x00, 0x33, 0x00, 0x2E, 0x00,
		0x74, 0x00, 0x78, 0x00, 0x74, 0x00, 0x50, 0x00
    };

	auto v3 = reinterpret_cast<DWORD*>(byte_16310);
	// do
	// {
	// 	*v3 ^= v1;
	// 	++v3;
	// } while (v3 < byte_16390);
	// 上面这种方式容易出问题,换一种方式
	while (v3 <= reinterpret_cast<DWORD*>(byte_16310 + sizeof(byte_16310)))
	{
		*v3 ^= v1;
		++v3;
	}

	auto v4 = static_cast<int>(0);
	const auto v5 = static_cast<__int64>(v2);
	auto SubStr = reinterpret_cast<wchar_t*>(byte_16310);
	auto word_16432 = static_cast<__int16>(v2);
	auto word_16430 = static_cast<__int16>(v2);

	byte_16310[v5] = 0;
	byte_16310[v5 + 1] = 0;
	auto v6 = static_cast<signed __int64>(0i64);
	do
	{
		byte_16390[v6] ^= byte_16310[v4];
		++v6;
		v4 = (v4 + 1) % static_cast<unsigned __int16>(v2);
	} while (v6 < 128);

	// 虽然结果有个
	// Run-Time Check Failure #2 - Stack around the variable 'byte_16310' was corrupted.
	// 无视它...反正结果输出了....
	std::cout << byte_16390 << std::endl;
}
